// Code generated by BobGen mysql v0.40.2. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var Documents = Table[
	documentColumns,
	documentIndexes,
	documentForeignKeys,
	documentUniques,
	documentChecks,
]{
	Schema: "",
	Name:   "documents",
	Columns: documentColumns{
		ID: column{
			Name:      "id",
			DBType:    "varchar",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Body: column{
			Name:      "body",
			DBType:    "text",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedAt: column{
			Name:      "created_at",
			DBType:    "timestamp",
			Default:   "CURRENT_TIMESTAMP",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: documentIndexes{
		PRIMARY: index{
			Type: "BTREE",
			Name: "PRIMARY",
			Columns: []indexColumn{
				{
					Name:         "id",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:  true,
			Comment: "",
		},
	},
	PrimaryKey: &constraint{
		Name:    "PRIMARY",
		Columns: []string{"id"},
		Comment: "",
	},

	Comment: "",
}

type documentColumns struct {
	ID        column
	Body      column
	CreatedAt column
}

func (c documentColumns) AsSlice() []column {
	return []column{
		c.ID, c.Body, c.CreatedAt,
	}
}

type documentIndexes struct {
	PRIMARY index
}

func (i documentIndexes) AsSlice() []index {
	return []index{
		i.PRIMARY,
	}
}

type documentForeignKeys struct{}

func (f documentForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type documentUniques struct{}

func (u documentUniques) AsSlice() []constraint {
	return []constraint{}
}

type documentChecks struct{}

func (c documentChecks) AsSlice() []check {
	return []check{}
}
