// Code generated by BobGen mysql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/stephenafamo/bob/clause"
	"github.com/stephenafamo/bob/dialect/mysql"
	"github.com/stephenafamo/bob/dialect/mysql/dialect"
)

var (
	SelectWhere     = Where[*dialect.SelectQuery]()
	UpdateWhere     = Where[*dialect.UpdateQuery]()
	DeleteWhere     = Where[*dialect.DeleteQuery]()
	OnConflictWhere = Where[*clause.ConflictClause]() // Used in ON CONFLICT DO UPDATE
)

func Where[Q mysql.Filterable]() struct {
	BenchmarkLogs      benchmarkLogWhere[Q]
	Benchmarks         benchmarkWhere[Q]
	Documents          documentWhere[Q]
	Instances          instanceWhere[Q]
	Sessions           sessionWhere[Q]
	TeamGithubAccounts teamGithubAccountWhere[Q]
	Teams              teamWhere[Q]
	Users              userWhere[Q]
} {
	return struct {
		BenchmarkLogs      benchmarkLogWhere[Q]
		Benchmarks         benchmarkWhere[Q]
		Documents          documentWhere[Q]
		Instances          instanceWhere[Q]
		Sessions           sessionWhere[Q]
		TeamGithubAccounts teamGithubAccountWhere[Q]
		Teams              teamWhere[Q]
		Users              userWhere[Q]
	}{
		BenchmarkLogs:      buildBenchmarkLogWhere[Q](BenchmarkLogs.Columns),
		Benchmarks:         buildBenchmarkWhere[Q](Benchmarks.Columns),
		Documents:          buildDocumentWhere[Q](Documents.Columns),
		Instances:          buildInstanceWhere[Q](Instances.Columns),
		Sessions:           buildSessionWhere[Q](Sessions.Columns),
		TeamGithubAccounts: buildTeamGithubAccountWhere[Q](TeamGithubAccounts.Columns),
		Teams:              buildTeamWhere[Q](Teams.Columns),
		Users:              buildUserWhere[Q](Users.Columns),
	}
}
